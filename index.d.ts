import { DraftInlineStyle, EditorState, 
    RawDraftContentState, ContentState, 
    ContentBlock, DraftEntityType, 
    DraftEditorCommand, DraftHandleValue,
    DraftBlockType, SelectionState,
    RawDraftEntity
} from 'draft-js';

export namespace BaseUtils {
    function UniqueIndex(): number;
}
export namespace ColorUtils {
    function detectColorsFromDraftState(draftState: RawDraftContentState): string[];
    function detectColorsFromHTMLString(html: string): string[];
    function getHexColor(color: string): string | null;
    const namedColors: {
        aliceblue: string;
        antiquewhite: string;
        aqua: string;
        aquamarine: string;
        azure: string;
        beige: string;
        bisque: string;
        black: string;
        blanchedalmond: string;
        blue: string;
        blueviolet: string;
        brown: string;
        burlywood: string;
        cadetblue: string;
        chartreuse: string;
        chocolate: string;
        coral: string;
        cornflowerblue: string;
        cornsilk: string;
        crimson: string;
        cyan: string;
        darkblue: string;
        darkcyan: string;
        darkgoldenrod: string;
        darkgray: string;
        darkgreen: string;
        darkkhaki: string;
        darkmagenta: string;
        darkolivegreen: string;
        darkorange: string;
        darkorchid: string;
        darkred: string;
        darksalmon: string;
        darkseagreen: string;
        darkslateblue: string;
        darkslategray: string;
        darkturquoise: string;
        darkviolet: string;
        deeppink: string;
        deepskyblue: string;
        dimgray: string;
        dodgerblue: string;
        firebrick: string;
        floralwhite: string;
        forestgreen: string;
        fuchsia: string;
        gainsboro: string;
        ghostwhite: string;
        gold: string;
        goldenrod: string;
        gray: string;
        green: string;
        greenyellow: string;
        honeydew: string;
        hotpink: string;
        indianred: string;
        indigo: string;
        ivory: string;
        khaki: string;
        lavender: string;
        lavenderblush: string;
        lawngreen: string;
        lemonchiffon: string;
        lightblue: string;
        lightcoral: string;
        lightcyan: string;
        lightgoldenrodyellow: string;
        lightgreen: string;
        lightgrey: string;
        lightpink: string;
        lightsalmon: string;
        lightseagreen: string;
        lightskyblue: string;
        lightslategray: string;
        lightsteelblue: string;
        lightyellow: string;
        lime: string;
        limegreen: string;
        linen: string;
        magenta: string;
        maroon: string;
        mediumaquamarine: string;
        mediumblue: string;
        mediumorchid: string;
        mediumpurple: string;
        mediumseagreen: string;
        mediumslateblue: string;
        mediumspringgreen: string;
        mediumturquoise: string;
        mediumvioletred: string;
        midnightblue: string;
        mintcream: string;
        mistyrose: string;
        moccasin: string;
        navajowhite: string;
        navy: string;
        oldlace: string;
        olive: string;
        olivedrab: string;
        orange: string;
        orangered: string;
        orchid: string;
        palegoldenrod: string;
        palegreen: string;
        paleturquoise: string;
        palevioletred: string;
        papayawhip: string;
        peachpuff: string;
        peru: string;
        pink: string;
        plum: string;
        powderblue: string;
        purple: string;
        rebeccapurple: string;
        red: string;
        rosybrown: string;
        royalblue: string;
        saddlebrown: string;
        salmon: string;
        sandybrown: string;
        seagreen: string;
        seashell: string;
        sienna: string;
        silver: string;
        skyblue: string;
        slateblue: string;
        slategray: string;
        snow: string;
        springgreen: string;
        steelblue: string;
        tan: string;
        teal: string;
        thistle: string;
        tomato: string;
        turquoise: string;
        violet: string;
        wheat: string;
        white: string;
        whitesmoke: string;
        yellow: string;
        yellowgreen: string;
    };
}
export namespace ContentUtils {
    function clear(editorState: EditorState): EditorState;
    function createEditorState(contentState: ContentState, editorDecorators?: any): EditorState;
    function createEmptyEditorState(editorDecorators?: any): EditorState;
    function decreaseSelectionIndent(editorState: EditorState): any;
    function getSelectedBlocks(editorState: EditorState): ContentBlock[];
    function getSelectionBlock(editorState: EditorState): ContentBlock;
    function getSelectionBlockData(editorState: EditorState, name: string): any;
    function getSelectionBlockType(editorState: EditorState): DraftEntityType;
    function getSelectionEntityData(editorState: EditorState, type: DraftEntityType): any;
    function getSelectionEntityType(editorState: EditorState): DraftEntityType | null;
    function getSelectionInlineStyle(editorState: EditorState): DraftInlineStyle;
    function getSelectionText(editorState: EditorState): string;
    function handleKeyCommand(editorState: EditorState, command: DraftEditorCommand): DraftHandleValue;
    function increaseSelectionIndent(editorState: EditorState, maxIndent: number): EditorState;
    function insertAtomicBlock(editorState: EditorState, type: DraftEntityType, immutable: boolean, data: Object): EditorState;
    function insertHTML(editorState: EditorState, htmlString: string, source: any): EditorState;
    function insertHorizontalLine(editorState: EditorState): EditorState;
    function insertMedias(editorState: EditorState, medias: any[]): EditorState;
    function insertText(editorState: EditorState, text: string, inlineStyle?: DraftInlineStyle, entity?: RawDraftEntity): EditorState;
    function isEditorState(editorState: EditorState): boolean;
    function isSelectionCollapsed(editorState: EditorState): boolean;
    function redo(editorState: EditorState): EditorState;
    function registerStrictBlockType(blockType: DraftBlockType): void;
    function removeBlock(editorState: EditorState, block: ContentBlock, lastSelection?: SelectionState | null): EditorState;
    function removeMedia(editorState: EditorState, mediaBlock: ContentBlock): EditorState;
    function removeSelectionInlineStyles(editorState: EditorState): any;
    function selectBlock(editorState: EditorState, block: ContentBlock): EditorState;
    function selectNextBlock(editorState: EditorState, block: ContentBlock): EditorState;
    function selectionContainsBlockType(editorState: EditorState, blockType: DraftBlockType): ContentBlock;
    function selectionContainsStrictBlock(editorState: EditorState): ContentBlock;
    function selectionHasInlineStyle(editorState: EditorState, style: string): boolean;
    function setMediaData(editorState: EditorState, entityKey: string, data: any): any;
    function setMediaPosition(editorState: EditorState, mediaBlock: ContentBlock, position: any): any;
    function setSelectionBlockData(editorState: EditorState, blockData: any, override: any): EditorState;
    function toggleSelectionAlignment(editorState: EditorState, alignment: any): any;
    function toggleSelectionBackgroundColor(editorState: EditorState, color: string): EditorState;
    function toggleSelectionBlockType(editorState: EditorState, blockType: string | DraftBlockType): EditorState;
    function toggleSelectionColor(editorState: EditorState, color: string): EditorState;
    function toggleSelectionEntity(editorState: EditorState, entity: RawDraftEntity): EditorState;
    function toggleSelectionFontFamily(editorState: EditorState, fontFamily: string): EditorState;
    function toggleSelectionFontSize(editorState: EditorState, fontSize: string): EditorState;
    function toggleSelectionIndent(editorState: EditorState, textIndent: number, maxIndent: number): EditorState;
    function toggleSelectionInlineStyle(editorState: EditorState, style: string, prefix: string): EditorState;
    function toggleSelectionLetterSpacing(editorState: EditorState, letterSpacing: string): EditorState;
    function toggleSelectionLineHeight(editorState: EditorState, lineHeight: string): EditorState;
    function toggleSelectionLink(editorState: EditorState, href: string, target: string): EditorState;
    function undo(editorState: EditorState): EditorState;
}
